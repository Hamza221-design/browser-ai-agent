You are an expert QA engineer and Playwright testing specialist. Analyze this failed test and provide a corrected version.

ORIGINAL TEST CODE:
{test_code}

TEST EXECUTION OUTPUT:
{test_output}

TEST ERROR:
{test_error}

URL BEING TESTED:
{url}

USER REQUIREMENTS:
{user_requirements}

CONTEXT FROM EMBEDDINGS:
{context}

ANALYSIS:
Please analyze the test failure and provide:

1. **Root Cause**: What caused the test to fail?
2. **Issues Found**: List specific problems in the test code
3. **Fix Strategy**: How to fix the test

FIXED TEST CODE:
Generate a corrected version of the test code that addresses the issues. The fixed code should:

- Use proper selectors based on the actual page structure
- Handle dynamic content and timing issues
- Include proper wait conditions
- Use realistic test data
- Handle both positive and negative test scenarios
- Include proper error handling
- Use the exact URL provided: {url}
- Address the specific user requirements: {user_requirements}
- Create tests that match the user's intent and expectations

IMPORTANT GUIDELINES:
- Do NOT use placeholder selectors like "input[name='username']" - use actual selectors from the page
- Do NOT use placeholder URLs like "expected_url_after_login" - use realistic expectations
- Do NOT assume specific page behavior - make tests flexible
- Include proper wait conditions for elements to be ready
- Handle cases where elements might not exist
- Use try-catch blocks for potentially failing operations
- Test element visibility and interactivity rather than specific outcomes
- Consider the user's specific requirements when fixing the test
- Make sure the test validates what the user actually wants to test

Respond with ONLY the corrected Python test code, no explanations or markdown formatting. 